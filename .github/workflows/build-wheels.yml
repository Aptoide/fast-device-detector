name: Build and publish wheels

on:
  push:
    tags:
      - v*
  workflow_dispatch:

jobs:
  # Build wheels for macOS (ARM64 and x86_64) and Linux x86_64
  build-wheels:
    name: Build wheel on ${{ matrix.os }} - ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
            python-architecture: x64
          - os: macos-latest
            target: aarch64-apple-darwin
            python-architecture: x64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            python-architecture: x64

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          architecture: ${{ matrix.python-architecture }}
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Set up cross-compilation for ARM64 macOS
        if: matrix.target == 'aarch64-apple-darwin'
        run: |
          echo "CARGO_BUILD_TARGET=aarch64-apple-darwin" >> $GITHUB_ENV
          rustup target add aarch64-apple-darwin
      
      - name: Install maturin
        run: |
          python -m pip install --upgrade pip
          pip install maturin
      
      - name: Build wheels
        run: |
          maturin build --release --target ${{ matrix.target }} --strip
      
      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels-${{ matrix.target }}
          path: target/wheels/*.whl
  
  # Publish wheels to PyPI
  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: [build-wheels]
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: dist
          pattern: wheels-*
          merge-multiple: true
      
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true 